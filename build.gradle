buildscript {
	ext {
		springBootVersion = "1.5.2.RELEASE"
		springCloudZuulVersion = "1.2.5.RELEASE"

		lombokVersion = "1.16.14"
		commonsLang3Version = "3.5"
		commonsIOVersion = "2.4"
		restassuredVersion = "2.4.0"
	}
	repositories {
		mavenLocal()
		//mavenCentral()
		maven {
			url "http://nexus:8080/nexus/content/groups/public/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

group = "org.lab.oauth"
version = version

subprojects {
	apply plugin: "java"
	apply plugin: "eclipse"
	apply plugin: "idea"
	apply plugin: "org.springframework.boot"

	compileJava {
		sourceCompatibility = 1.8
		targetCompatibility = 1.8
		options.encoding = "UTF-8"
	}
	repositories {
		mavenLocal()
		//mavenCentral()
		maven {
			url "http://nexus:8080/nexus/content/groups/public/"
		}
	}
	dependencies {
	  compile "org.springframework.boot:spring-boot-starter-web"
		compile "org.springframework.boot:spring-boot-actuator"
		compile("org.projectlombok:lombok:${lombokVersion}")
		testCompile("org.springframework.boot:spring-boot-starter-test")
	}
}

configure(project(":oauth-server")) {
	dependencies {
		compile "org.springframework.security.oauth:spring-security-oauth2"
		compile "org.springframework:spring-jdbc"
		compile "mysql:mysql-connector-java"
		compile "com.fasterxml.jackson.datatype:jackson-datatype-jdk8"
		compile "org.apache.commons:commons-lang3:${commonsLang3Version}"
		testCompile "org.springframework.security:spring-security-test"
		testCompile "com.jayway.restassured:rest-assured:${restassuredVersion}"
	}
}

configure(project(":oauth-resource")) {
	dependencies {
		compile "org.springframework.security.oauth:spring-security-oauth2"
		compile "org.springframework:spring-jdbc"
		compile "org.apache.commons:commons-lang3:${commonsLang3Version}"
		compile "commons-io:commons-io:${commonsIOVersion}"
		compile "mysql:mysql-connector-java"
	}
}

configure(project(":oauth-ui")) {
	dependencies {
		compile "org.springframework.boot:spring-boot-starter-thymeleaf"
		compile "org.springframework.cloud:spring-cloud-starter-zuul:${springCloudZuulVersion}"

		testCompile "com.jayway.restassured:rest-assured:${restassuredVersion}"
	}
}

configure(project(":oauth-ui-implicit")) {
	dependencies {
		compile "org.springframework.boot:spring-boot-starter-thymeleaf"

		testCompile "com.jayway.restassured:rest-assured:${restassuredVersion}"
	}
}
